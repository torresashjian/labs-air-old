<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Project AIR™ – Getting Started</title>
    <link>https://tibcosoftware.github.io/labs-air/docs/getting-started/</link>
    <description>Recent content in Getting Started on Project AIR™</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://tibcosoftware.github.io/labs-air/docs/getting-started/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Install on AWS</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/getting-started/install-on-aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/getting-started/install-on-aws/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The following steps will guide you through the full infrastructure installation on Amazon Web Services.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;h4 id=&#34;prerequisite-1-docker&#34;&gt;Prerequisite 1: Docker&lt;/h4&gt;
&lt;p&gt;Air&amp;rsquo;s CLI is wrapped in a docker container to ease the installation process:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/get-started&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;prerequisite-2-aws-account-information&#34;&gt;Prerequisite 2: AWS Account Information&lt;/h4&gt;
&lt;p&gt;All the infrastructure components needed for Project Air will be installed in your provided AWS account, you will need the following information to install it:&lt;/p&gt;
&lt;p&gt;Your AWS access and secret keys: More information &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;installation-steps&#34;&gt;Installation Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-pull-aws-cli&#34;&gt;Step 1: pull aws cli&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;docker pull tibcosoftware/labs-air-aws-cli
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-2-call-install-command-on-cli&#34;&gt;Step 2: call install command on cli&lt;/h4&gt;
&lt;p&gt;Note: This installation installs a Kubernetes cluster using EKS in your aws account so it takes around ~20minutes to finish.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it tibcosoftware/labs-air-aws-cli air install
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Enter the AWS information when prompted (Note: To avoid prompt look at the Advanced install configuration section below)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Please enter your AWS_ACCESS_KEY_ID:

Please enter your AWS_SECRET_ACCESS_KEY:
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-3-optional-check-installation&#34;&gt;Step 3 [optional]: check installation&lt;/h4&gt;
&lt;p&gt;This command will allow you to connect to the kubernetes cluster to see the different components&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it -p 8001:8001 tibcosoftware/labs-air-aws-cli air dashboard
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Copy the token printed in the terminal&lt;/p&gt;
&lt;p&gt;And follow the dashboard link also printed in the terminal&lt;/p&gt;
&lt;p&gt;Congratulations!! Project Air infrastructure has been installed&lt;/p&gt;
&lt;h2 id=&#34;advanced-install-configuration&#34;&gt;Advanced install configuration&lt;/h2&gt;
&lt;p&gt;There is a way to avoid being prompted for your credentials as well as adding advanced configuration.&lt;/p&gt;
&lt;p&gt;You need to create a config.yaml file with the following content:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aws:
  AWS_ACCESS_KEY_ID: &amp;lt;YOUR ACCESS KEY ID HERE&amp;gt;
  AWS_SECRET_ACCESS_KEY: &amp;lt;YOUR SECRET ACCESS KEY ID HERE&amp;gt;
  AWS_DEFAULT_REGION: &amp;lt;YOUR DEFAULT REGION HERE&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then just mount a volume with the config.yaml file when calling the cli for example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it -v /path/to/config/file/:/configuration tibcosoftware/labs-air-aws-cli air install
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;advanced-configuration-for-assuming-a-different-role&#34;&gt;Advanced configuration for Assuming a different role&lt;/h3&gt;
&lt;p&gt;Add the following entry to the config.yaml file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aws:
  ...&amp;lt;Your previous configuration goes here&amp;gt;...
  AWS_ASSUME_ROLE_ARN: &amp;quot;&amp;lt;Add your Role ARN&amp;gt;&amp;quot;
  AWS_ASSUME_ROLE_SESSION_DURATION: &amp;quot;&amp;lt;Add your session duration for example 3600&amp;gt;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that the role session duration also implies how often you need to &amp;ldquo;air upgrade-charts&amp;rdquo; refresh the token&lt;/p&gt;
&lt;h3 id=&#34;advanced-configuration-for-choosing-a-different-cluster-name&#34;&gt;Advanced configuration for choosing a different cluster name&lt;/h3&gt;
&lt;p&gt;Sometimes if you are shareing an AWS account you want to choose a different kubernetes cluster name.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aws:
  ...&amp;lt;Your previous configuration goes here&amp;gt;...
  KUBE_CLUSTER_NAME: &amp;quot;&amp;lt;Your cluster name&amp;gt;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;uninstallation-steps&#34;&gt;Uninstallation Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-pull-aws-cli-1&#34;&gt;Step 1: pull aws cli&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;docker pull tibcosoftware/labs-air-aws-cli
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-2-call-delete-command-on-cli&#34;&gt;Step 2: call delete command on cli&lt;/h4&gt;
&lt;p&gt;Note: This installation deletes the Kubernetes cluster.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it tibcosoftware/labs-air-aws-cli air delete
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Enter the AWS information when prompted&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Please enter your AWS_ACCESS_KEY_ID:

Please enter your AWS_SECRET_ACCESS_KEY:
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Start the Edge</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/getting-started/start-the-edge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/getting-started/start-the-edge/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The following steps will guide you through the configuration and how to run the edge elements locally.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;h4 id=&#34;prerequisite-1-docker&#34;&gt;Prerequisite 1: Docker&lt;/h4&gt;
&lt;p&gt;Air&amp;rsquo;s CLI is wrapped in a docker container to ease the installation process:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/get-started&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;running-steps&#34;&gt;Running Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-download-basic-demo&#34;&gt;Step 1: Download basic demo&lt;/h4&gt;
&lt;p&gt;Download the &lt;a href=&#34;./basicdemo.zip&#34;&gt;basic demo file&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unzip basicdemo.zip&lt;/p&gt;
&lt;h4 id=&#34;step-2-configure-basic-demo&#34;&gt;Step 2: Configure basic demo&lt;/h4&gt;
&lt;p&gt;First let&amp;rsquo;s query the endpoints&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it tibcosoftware/labs-air-aws-cli air show-endpoints
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should see 3 endpoints being displayed something like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{&#39;service_name&#39;: &#39;core-air-cors-anywhere-service&#39;, &#39;hostname&#39;: &#39;&amp;lt;someawsdns&amp;gt;.us-west-2.elb.amazonaws.com&#39;, &#39;ports&#39;: [80]}


{&#39;service_name&#39;: &#39;core-ingress-nginx-controller&#39;, &#39;hostname&#39;: &#39;&amp;lt;someawsdns&amp;gt;.us-west-2.elb.amazonaws.com&#39;, &#39;ports&#39;: [80, 443]}


{&#39;service_name&#39;: &#39;core-mosquitto-service&#39;, &#39;hostname&#39;: &#39;&amp;lt;someawsdns&amp;gt;.us-west-2.elb.amazonaws.com&#39;, &#39;ports&#39;: [443]}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, let&amp;rsquo;s use those endpoints to configure the Edge example.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd basicdemo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Modify basicdemo/export_mqtt/configuration.toml&lt;/p&gt;
&lt;p&gt;Replace &lt;Add-Your-mosquitto-service-Enpoint-Here&gt; with your mosquitto-service endpoint also ensure the port is correct.&lt;/p&gt;
&lt;h4 id=&#34;step-3-run-the-basic-demo&#34;&gt;Step 3: run the basic demo&lt;/h4&gt;
&lt;p&gt;Inside your basicdemo folder run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./startEdgex.sh
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-4-get-the-basic-demo-security-token&#34;&gt;Step 4: get the basic demo security token&lt;/h4&gt;
&lt;p&gt;Inside your basicdemo folder run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./getSecurityToken.sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Copy the access token for tibuser, you will need it for the edge group registration.&lt;/p&gt;
&lt;p&gt;Congratulations!! Project Air edge basic demo is running&lt;/p&gt;
&lt;h2 id=&#34;uninstallation-steps&#34;&gt;Uninstallation Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-stop-the-demo&#34;&gt;Step 1: stop the demo&lt;/h4&gt;
&lt;p&gt;Inside your basicdemo folder run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./stopEdgex.sh
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Start the UI</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/getting-started/start-the-ui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/getting-started/start-the-ui/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The following steps will guide you through the configuration and how to run the UI locally.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;h4 id=&#34;prerequisite-1-git&#34;&gt;Prerequisite 1: Git&lt;/h4&gt;
&lt;p&gt;Air&amp;rsquo;s UI is located in a github repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;prerequisite-2-npm&#34;&gt;Prerequisite 2: npm&lt;/h4&gt;
&lt;p&gt;Air&amp;rsquo;s UI is an angular application that uses npm to install dependencies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;running-steps&#34;&gt;Running Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-clone-ui&#34;&gt;Step 1: clone UI&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/TIBCOSoftware/labs-air-ui.git
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-2-configure-ui-endpoints&#34;&gt;Step 2: configure UI endpoints&lt;/h4&gt;
&lt;p&gt;In this steps we are connecting the UI to Air&amp;rsquo;s infrastructure endpoints&lt;/p&gt;
&lt;p&gt;First let&amp;rsquo;s query the endpoints&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it tibcosoftware/labs-air-aws-cli air show-endpoints
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should see 3 endpoints being displayed something like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{&#39;service_name&#39;: &#39;core-air-cors-anywhere-service&#39;, &#39;hostname&#39;: &#39;&amp;lt;someawsdns&amp;gt;.us-west-2.elb.amazonaws.com&#39;, &#39;ports&#39;: [80]}


{&#39;service_name&#39;: &#39;core-ingress-nginx-controller&#39;, &#39;hostname&#39;: &#39;&amp;lt;someawsdns&amp;gt;.us-west-2.elb.amazonaws.com&#39;, &#39;ports&#39;: [80, 443]}


{&#39;service_name&#39;: &#39;core-mosquitto-service&#39;, &#39;hostname&#39;: &#39;&amp;lt;someawsdns&amp;gt;.us-west-2.elb.amazonaws.com&#39;, &#39;ports&#39;: [443]}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, let&amp;rsquo;s use those endpoints to configure the UI.&lt;/p&gt;
&lt;p&gt;Open the file proxy.conf.prod.us.json and replace the following entries at the end of the json file with the endpoints from previous step.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;,
  &amp;quot;/edgex/localgateway/*&amp;quot;: {
    &amp;quot;target&amp;quot;: &amp;quot;https://localhost:8443&amp;quot;,
    &amp;quot;secure&amp;quot;: false,
    &amp;quot;changeOrigin&amp;quot;: true,
    &amp;quot;logLevel&amp;quot;: &amp;quot;info&amp;quot;,
    &amp;quot;pathRewrite&amp;quot;:{&amp;quot;^/edgex/localgateway&amp;quot; : &amp;quot;&amp;quot;}
  },
  &amp;quot;/edgex/remotegateway/*&amp;quot;: {
    &amp;quot;target&amp;quot;: &amp;quot;http://&amp;lt;Add-Your-air-cors-anywhere-service-Enpoint-Here&amp;gt;&amp;quot;,
    &amp;quot;secure&amp;quot;: false,
    &amp;quot;changeOrigin&amp;quot;: true,
    &amp;quot;logLevel&amp;quot;: &amp;quot;info&amp;quot;,
    &amp;quot;pathRewrite&amp;quot;:{&amp;quot;^/edgex/remotegateway&amp;quot; : &amp;quot;&amp;quot;}
  },
  &amp;quot;/airEndpoint/*&amp;quot;: {
    &amp;quot;target&amp;quot;: &amp;quot;http://&amp;lt;Add-Your-ingress-nginx-controller-Enpoint-Here&amp;gt;&amp;quot;,
    &amp;quot;secure&amp;quot;: &amp;quot;false&amp;quot;,
    &amp;quot;changeOrigin&amp;quot;: true,
    &amp;quot;logLevel&amp;quot;: &amp;quot;info&amp;quot;,
    &amp;quot;pathRewrite&amp;quot;:{&amp;quot;^/airEndpoint&amp;quot; : &amp;quot;&amp;quot;}
  }
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-3-npm-install&#34;&gt;Step 3: npm install&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;cd labs-air-ui
npm install
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-4-start-the-ui&#34;&gt;Step 4: start the UI&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;npm run serve_us
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Congratulations!! Project Air UI is started on https://localhost:4200&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
