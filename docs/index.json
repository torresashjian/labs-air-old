[{"body":"First steps to start\n","excerpt":"First steps to start","ref":"https://tibcosoftware.github.io/labs-air/docs/getting-started/","title":"Getting Started"},{"body":"Introduction The following steps will guide you through the full infrastructure installation on Amazon Web Services.\nPrerequisites Prerequisite 1: Docker Air\u0026rsquo;s CLI is wrapped in a docker container to ease the installation process:\n Docker  Prerequisite 2: AWS Account Information All the infrastructure components needed for Project Air will be installed in your provided AWS account, you will need the following information to install it:\nYour AWS access and secret keys: More information here\nInstallation Steps Step 1: pull aws cli docker pull tibcosoftware/labs-air-aws-cli Step 2: call install command on cli Note: This installation installs a Kubernetes cluster using EKS in your aws account so it takes around ~20minutes to finish.\ndocker run -it tibcosoftware/labs-air-aws-cli air install Enter the AWS information when prompted (Note: To avoid prompt look at the Advanced install configuration section below)\nPlease enter your AWS_ACCESS_KEY_ID: Please enter your AWS_SECRET_ACCESS_KEY: Step 3 [optional]: check installation This command will allow you to connect to the kubernetes cluster to see the different components\ndocker run -it -p 8001:8001 tibcosoftware/labs-air-aws-cli air dashboard Copy the token printed in the terminal\nAnd follow the dashboard link also printed in the terminal\nCongratulations!! Project Air infrastructure has been installed\nAdvanced install configuration There is a way to avoid being prompted for your credentials as well as adding advanced configuration.\nYou need to create a config.yaml file with the following content:\naws: AWS_ACCESS_KEY_ID: \u0026lt;YOUR ACCESS KEY ID HERE\u0026gt; AWS_SECRET_ACCESS_KEY: \u0026lt;YOUR SECRET ACCESS KEY ID HERE\u0026gt; AWS_DEFAULT_REGION: \u0026lt;YOUR DEFAULT REGION HERE\u0026gt; Then just mount a volume with the config.yaml file when calling the cli for example:\ndocker run -it -v /path/to/config/file/:/configuration tibcosoftware/labs-air-aws-cli air install Advanced configuration for Assuming a different role Add the following entry to the config.yaml file:\naws: ...\u0026lt;Your previous configuration goes here\u0026gt;... AWS_ASSUME_ROLE_ARN: \u0026quot;\u0026lt;Add your Role ARN\u0026gt;\u0026quot; AWS_ASSUME_ROLE_SESSION_DURATION: \u0026quot;\u0026lt;Add your session duration for example 3600\u0026gt;\u0026quot; Note that the role session duration also implies how often you need to \u0026ldquo;air upgrade-charts\u0026rdquo; refresh the token\nAdvanced configuration for choosing a different cluster name Sometimes if you are shareing an AWS account you want to choose a different kubernetes cluster name.\naws: ...\u0026lt;Your previous configuration goes here\u0026gt;... KUBE_CLUSTER_NAME: \u0026quot;\u0026lt;Your cluster name\u0026gt;\u0026quot; Uninstallation Steps Step 1: pull aws cli docker pull tibcosoftware/labs-air-aws-cli Step 2: call delete command on cli Note: This installation deletes the Kubernetes cluster.\ndocker run -it tibcosoftware/labs-air-aws-cli air delete Enter the AWS information when prompted\nPlease enter your AWS_ACCESS_KEY_ID: Please enter your AWS_SECRET_ACCESS_KEY: ","excerpt":"Introduction The following steps will guide you through the full infrastructure installation on …","ref":"https://tibcosoftware.github.io/labs-air/docs/getting-started/install-on-aws/","title":"Install on AWS"},{"body":"Introduction The following steps will guide you through the configuration and how to run the edge elements locally.\nPrerequisites Prerequisite 1: Docker Air\u0026rsquo;s CLI is wrapped in a docker container to ease the installation process:\n Docker  Running Steps Step 1: Download basic demo Download the basic demo file\nUnzip basicdemo.zip\nStep 2: Configure basic demo First let\u0026rsquo;s query the endpoints\ndocker run -it tibcosoftware/labs-air-aws-cli air show-endpoints You should see 3 endpoints being displayed something like:\n{'service_name': 'core-air-cors-anywhere-service', 'hostname': '\u0026lt;someawsdns\u0026gt;.us-west-2.elb.amazonaws.com', 'ports': [80]} {'service_name': 'core-ingress-nginx-controller', 'hostname': '\u0026lt;someawsdns\u0026gt;.us-west-2.elb.amazonaws.com', 'ports': [80, 443]} {'service_name': 'core-mosquitto-service', 'hostname': '\u0026lt;someawsdns\u0026gt;.us-west-2.elb.amazonaws.com', 'ports': [443]} Then, let\u0026rsquo;s use those endpoints to configure the Edge example.\ncd basicdemo Modify basicdemo/export_mqtt/configuration.toml\nReplace  with your mosquitto-service endpoint also ensure the port is correct.\nStep 3: run the basic demo Inside your basicdemo folder run\n./startEdgex.sh Step 4: get the basic demo security token Inside your basicdemo folder run\n./getSecurityToken.sh Copy the access token for tibuser, you will need it for the edge group registration.\nCongratulations!! Project Air edge basic demo is running\nUninstallation Steps Step 1: stop the demo Inside your basicdemo folder run\n./stopEdgex.sh ","excerpt":"Introduction The following steps will guide you through the configuration and how to run the edge …","ref":"https://tibcosoftware.github.io/labs-air/docs/getting-started/start-the-edge/","title":"Start the Edge"},{"body":"Introduction The following steps will guide you through the configuration and how to run the UI locally.\nPrerequisites Prerequisite 1: Git Air\u0026rsquo;s UI is located in a github repository:\n Git  Prerequisite 2: npm Air\u0026rsquo;s UI is an angular application that uses npm to install dependencies:\n npm  Running Steps Step 1: clone UI git clone https://github.com/TIBCOSoftware/labs-air-ui.git Step 2: configure UI endpoints In this steps we are connecting the UI to Air\u0026rsquo;s infrastructure endpoints\nFirst let\u0026rsquo;s query the endpoints\ndocker run -it tibcosoftware/labs-air-aws-cli air show-endpoints You should see 3 endpoints being displayed something like:\n{'service_name': 'core-air-cors-anywhere-service', 'hostname': '\u0026lt;someawsdns\u0026gt;.us-west-2.elb.amazonaws.com', 'ports': [80]} {'service_name': 'core-ingress-nginx-controller', 'hostname': '\u0026lt;someawsdns\u0026gt;.us-west-2.elb.amazonaws.com', 'ports': [80, 443]} {'service_name': 'core-mosquitto-service', 'hostname': '\u0026lt;someawsdns\u0026gt;.us-west-2.elb.amazonaws.com', 'ports': [443]} Then, let\u0026rsquo;s use those endpoints to configure the UI.\nOpen the file proxy.conf.prod.us.json and replace the following entries at the end of the json file with the endpoints from previous step.\n, \u0026quot;/edgex/localgateway/*\u0026quot;: { \u0026quot;target\u0026quot;: \u0026quot;https://localhost:8443\u0026quot;, \u0026quot;secure\u0026quot;: false, \u0026quot;changeOrigin\u0026quot;: true, \u0026quot;logLevel\u0026quot;: \u0026quot;info\u0026quot;, \u0026quot;pathRewrite\u0026quot;:{\u0026quot;^/edgex/localgateway\u0026quot; : \u0026quot;\u0026quot;} }, \u0026quot;/edgex/remotegateway/*\u0026quot;: { \u0026quot;target\u0026quot;: \u0026quot;http://\u0026lt;Add-Your-air-cors-anywhere-service-Enpoint-Here\u0026gt;\u0026quot;, \u0026quot;secure\u0026quot;: false, \u0026quot;changeOrigin\u0026quot;: true, \u0026quot;logLevel\u0026quot;: \u0026quot;info\u0026quot;, \u0026quot;pathRewrite\u0026quot;:{\u0026quot;^/edgex/remotegateway\u0026quot; : \u0026quot;\u0026quot;} }, \u0026quot;/airEndpoint/*\u0026quot;: { \u0026quot;target\u0026quot;: \u0026quot;http://\u0026lt;Add-Your-ingress-nginx-controller-Enpoint-Here\u0026gt;\u0026quot;, \u0026quot;secure\u0026quot;: \u0026quot;false\u0026quot;, \u0026quot;changeOrigin\u0026quot;: true, \u0026quot;logLevel\u0026quot;: \u0026quot;info\u0026quot;, \u0026quot;pathRewrite\u0026quot;:{\u0026quot;^/airEndpoint\u0026quot; : \u0026quot;\u0026quot;} } Step 3: npm install cd labs-air-ui npm install Step 4: start the UI npm run serve_us Congratulations!! Project Air UI is started on https://localhost:4200\n","excerpt":"Introduction The following steps will guide you through the configuration and how to run the UI …","ref":"https://tibcosoftware.github.io/labs-air/docs/getting-started/start-the-ui/","title":"Start the UI"},{"body":"TIBCO LABS Project AIR™ Details\n","excerpt":"TIBCO LABS Project AIR™ Details","ref":"https://tibcosoftware.github.io/labs-air/docs/","title":"Documentation"},{"body":"","excerpt":"","ref":"https://tibcosoftware.github.io/labs-air/blog/releases/","title":"New Releases"},{"body":"first public Implementation of the TIBCO LABS™ Project AIR™, containing:\n used EdgeX Foundry Assets TIBCO Flogo Services DGraph configurations ComputeDB Datastore configuration IoT UI as Cloud Starter Implementation Spotfire Dashboard   please have a look back soon here.\n ","excerpt":"first public Implementation of the TIBCO LABS™ Project AIR™, containing:\n used EdgeX Foundry Assets …","ref":"https://tibcosoftware.github.io/labs-air/blog/2020/02/26/initial-release/","title":"Initial Release"},{"body":"","excerpt":"","ref":"https://tibcosoftware.github.io/labs-air/index.json","title":""},{"body":"  #td-cover-block-0 { background-image: url(/labs-air/about/featured-background_hu0bf202e9b0c50adb82b333dd3f6f434d_393591_960x540_fill_q75_catmullrom_bottom.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/labs-air/about/featured-background_hu0bf202e9b0c50adb82b333dd3f6f434d_393591_1920x1080_fill_q75_catmullrom_bottom.jpg); } }  Project AIR™ by TIBCO LABS™ UI and more for EdgeX Foundry API's        More Details about this Initiative here TIBCO LABS™ Project AIR™ Wiki, on      TIBCO LABS™ is a program designed to provide customers and partners with a mechanism for actively participating in TIBCO’s history of innovation. TIBCO has always been at the forefront of innovation, and TIBCO LABS™ allows participants to share in this history by collaboratively building solutions to today’s challenging problems, previewing new capabilities, and accessing emerging technologies in areas such as blockchain, AI / ML and IoT. Through TIBCO LABS™, customers and partners can gain insight into TIBCO’s innovation activities, participate in shaping the form of these activities in the years to come, and benefit from TIBCO’s leadership position in integration and analytics. \n    \n     BSD 3-Clause License  Copyright © 2020 TIBCO Software Inc. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n  Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n  Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n  Neither the name of TIBCO Software Inc. nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT OWNER AND CONTRIBUTORS \u0026ldquo;AS IS\u0026rdquo; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n    ","excerpt":"#td-cover-block-0 { background-image: …","ref":"https://tibcosoftware.github.io/labs-air/about/","title":"About Project AIR™"},{"body":"This is the blog section. It has two categories: News and Releases.\nEntries in these directories are listed in reverse chronological order.\n","excerpt":"This is the blog section. It has two categories: News and Releases.\nEntries in these directories are …","ref":"https://tibcosoftware.github.io/labs-air/blog/","title":"Blog"},{"body":"","excerpt":"","ref":"https://tibcosoftware.github.io/labs-air/community/","title":"Community"},{"body":"  #td-cover-block-0 { background-image: url(/labs-air/featured-background-org_hu54644cfbb8309b58f400117071f34abd_6110735_960x540_fill_q75_catmullrom_top.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/labs-air/featured-background-org_hu54644cfbb8309b58f400117071f34abd_6110735_1920x1080_fill_q75_catmullrom_top.jpg); } }  Project AIR™ Learn More   Download   Intelligent insights from device to boardroom\n\n        Project AIR™ by TIBCO LABS™\nWith Project AIR™, you can register and interact with IoT Device Farm to process derived data anywhere that is needed and store the data as needed to analyze and address a large number of analytical use cases extending any layer of its architecture as needed. Connect your IoT Device Farm and take action in TIBCO\u0026rsquo;s connected intelligence cloud.\n      Get Started Follow the documentation, and start today !\nRead more …\n   Overview How we benefit form TIBCO Cloud™.\nRead more …\n   Releases Find latest release details in our Blog.\nRead more …\n \n       Contact us! Reach us for more details, or engage us today !\nRead more …\n   Contributions welcome! We do a Pull Request contributions workflow on GitHub. New users are always welcome!\nRead more …\n   Follow us on Twitter! For announcement of latest features etc\u0026hellip;\nRead more …\n    ","excerpt":"#td-cover-block-0 { background-image: …","ref":"https://tibcosoftware.github.io/labs-air/","title":"Project AIR™"},{"body":"","excerpt":"","ref":"https://tibcosoftware.github.io/labs-air/search/","title":"Search Results"}]